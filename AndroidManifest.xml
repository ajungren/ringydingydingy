<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          android:versionCode="000703"
          android:versionName="0.7.3"
          package="com.dririan.RingyDingyDingy">
    <!--  Target Jelly Bean, but require Donut at a minimum
          Jelly Bean is targeted to bring new features, such as the Action Bar.
          However, Donut is the minimum, because API level checks are used before using newer functions. -->
    <uses-sdk android:minSdkVersion="4"
              android:targetSdkVersion="16" />

    <!-- Telephony hardware is not needed as the Google Voice trigger works over Wi-Fi -->
    <uses-feature android:name="android.hardware.telephony"
                  android:required="false" />

    <!-- READ_CONTACTS is used to map a phone number to a contact's name -->
    <uses-permission android:name="android.permission.READ_CONTACTS" />

    <!-- RECEIVE_BOOT_COMPLETED is used to show the toggle notification (if enabled) on boot -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <!-- RECEIVE_SMS is used to receive text messages so they can be checked for commands -->
    <uses-permission android:name="android.permission.RECEIVE_SMS" />

    <!-- SEND_SMS is used to reply to text message commands (if enabled) -->
    <uses-permission android:name="android.permission.SEND_SMS" />

    <!-- googlevoice.permission.RECEIVE_SMS is used to receive Google Voice text messages so they can be checked for commands -->
    <uses-permission android:name="com.google.android.apps.googlevoice.permission.RECEIVE_SMS" />

    <!-- New permissions added by RingyDingyDingy for third-party apps
         These permissions are documented below, where they are used. -->
    <permission android:name="com.dririan.RingyDingyDingy.EXECUTE_COMMAND"
                android:label="@string/permission_execute_command_label"
                android:description="@string/permission_execute_command_description"
                android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
                android:protectionLevel="dangerous" />
    <permission android:name="com.dririan.RingyDingyDingy.HANDLE_COMMAND"
                android:label="@string/permission_handle_command_label"
                android:description="@string/permission_handle_command_description"
                android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
                android:protectionLevel="dangerous" />
    <permission android:name="com.dririan.RingyDingyDingy.HANDLE_INTERNAL_COMMAND"
                android:label="@string/permission_handle_internal_command_label"
                android:description="@string/permission_handle_internal_command_description"
                android:permissionGroup="android.permission-group.SYSTEM_TOOLS"
                android:protectionLevel="signature" />

    <!-- EXECUTE_COMMAND is used to activate RingyDingyDingy commands -->
    <uses-permission android:name="com.dririan.RingyDingyDingy.EXECUTE_COMMAND" />

    <!-- HANDLE_COMMAND is used to handle commands that are not built in to RingyDingyDingy -->
    <uses-permission android:name="com.dririan.RingyDingyDingy.HANDLE_COMMAND" />

    <!-- HANDLE_INTERNAL_COMMAND is used to handle commands that are built in to RingyDingyDingy -->
    <uses-permission android:name="com.dririan.RingyDingyDingy.HANDLE_INTERNAL_COMMAND" />

    <application android:icon="@drawable/icon"
                 android:label="@string/app_name">

        <!-- LogActivity is used to view the activation log -->
        <activity android:name=".LogActivity"
                  android:label="@string/log_label" />

        <!-- MainActivity is the entry point, where information about how to use RingyDingyDingy is shown -->
        <activity android:name=".MainActivity"
                  android:enabled="true"
                  android:label="@string/app_name">
            <intent-filter>
                <!-- These action and category tags cause the app launcher to open MainActivity when RingyDingyDingy is opened -->
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- PreferencesActivity is accessed by tapping Settings in the menu, and configures RingyDingyDingy -->
        <activity android:name=".PreferencesActivity"
                  android:label="@string/settings_label" />

        <!-- RemoteRingActivity is the activity that is launched when a page or ring is activated -->
        <activity android:name=".RemoteRingActivity"
                  android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <!-- ApiHandler handles all of the API calls, including when they are used by RingyDingyDingy itself  -->
        <receiver android:name=".ApiHandler"
                  android:enabled="true"
                  android:exported="true"
                  android:permission="com.dririan.RingyDingyDingy.EXECUTE_COMMAND">
            <intent-filter>
                <action android:name="com.dririan.RingyDingyDingy.COMMAND_LOCK" />
                <action android:name="com.dririan.RingyDingyDingy.COMMAND_RING" />
                <action android:name="com.dririan.RingyDingyDingy.COMMAND_STOP" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!-- DeviceAdmin is a dummy class to support device administration (for remote locking) -->
        <receiver android:name=".DeviceAdmin"
                  android:enabled="true"
                  android:exported="false">
            <meta-data android:name="android.app.device_admin"
                       android:resource="@xml/device_admin_policies" />
        </receiver>

        <!-- GoogleVoiceReceiver handles incoming Google Voice text messages -->
        <receiver android:name=".GoogleVoiceReceiver"
                  android:enabled="true"
                  android:exported="true">
            <intent-filter android:priority="1000">
                <action android:name="com.google.android.apps.googlevoice.SMS_RECEIVED" />
            </intent-filter>
        </receiver>

        <!-- LogHandler handles logging command activations -->
        <receiver android:name=".LogHandler"
                  android:enabled="true"
                  android:exported="true"
                  android:permission="com.dririan.RingyDingyDingy.EXECUTE_COMMAND">
            <intent-filter>
                <action android:name="com.dririan.RingyDingyDingy.LOG_COMMAND" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!-- NotificationHandler handles displaying, hiding, and updating the toggle notification -->
        <receiver android:name=".NotificationHandler"
                  android:enabled="true"
                  android:exported="false">
            <intent-filter>
                <!-- BOOT_COMPLETED is received to show the notification (if enabled) on boot -->
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <!-- SmsErrorHandler handles errors that occur when an SMS reply is sent -->
        <receiver android:name=".SmsErrorHandler"
                  android:enabled="true"
                  android:exported="false">
            <intent-filter>
                <!-- RingyDingyDingy.SMS_SENT is only used internally by SmsReceiver -->
                <action android:name="com.dririan.RingyDingyDingy.SMS_SENT" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!-- SmsReceiver handles incoming SMS messages -->
        <receiver android:name=".SmsReceiver"
                  android:enabled="true"
                  android:exported="true">
            <intent-filter android:priority="1000">
                <action android:name="android.provider.Telephony.SMS_RECEIVED" />
            </intent-filter>
        </receiver>

        <!-- ToggleHandler handles toggling RingyDingyDingy and updating the notification and PreferencesActivity (if open) -->
        <receiver android:name=".ToggleHandler"
                  android:enabled="true"
                  android:exported="false">
            <intent-filter>
                <!-- RingyDingyDingy.TOGGLE is only used internally by NotificationHandler and PreferencesActivity -->
                <action android:name="com.dririan.RingyDingyDingy.TOGGLE" />
            </intent-filter>
        </receiver>
    </application>
</manifest>
